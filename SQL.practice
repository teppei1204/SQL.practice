## SQLって何？

**SQL** (Structured Query Language)  
構造化問い合わせ言語

### SQLのイメージ
- **データベース** = データを保管する場所  
- データベースに対して、**保管**、**取得**、**更新**、**削除**を行うのがSQLです。

### どうデータを保管している？
- **データベース**
  - **テーブル** (表形式でデータを管理しているもの)
  
  **※イメージ**
  - **データベース** (図書館の書庫)
  - **テーブル** (書庫の棚)
  - **データ** (本)

### SQLで何ができる？
- データの**保管**、**取得**、**更新**、**削除**
- テーブルの**作成**、**更新**、**削除**
- アプリ開発時にデータベースを**操作**できる
- データ分析して**ビジネス活動を改善**

## SELECT FROM

- **表**のことを**テーブル**
- **行**のことを**カラム**
- **列**のことを**レコード**

### Q. 名前と特徴の取得

**one piece**

| name   | fruit   | feature |
|--------|---------|---------|
| ルフィ | ヒトヒト | 自由    |
| ゾロ   | 無し    | 方向音痴 |
| ブルック | ヨミヨミ | 骨     |
| サンジ | 無し    | ぐる眉  |

```sql
SELECT name, feature  -- カラム名
FROM one_piece;       -- テーブル名


| name   | feature |
| ルフィ  |   自由   |
|  ゾロ   | 方向音痴  |
|ブルック| |    骨    |
| サンジ |   ぐる眉  |

SQLを理解するコツ
元々どういう表があって、そこから新たにどういう表のデータを取ってきたいか、どういう表を作りたいかを考える（例：SELECT 列1, 列3）

カラム名の変更
  SELECT name AS '名前', feature AS '特徴'
FROM one_piece;

  AS:カラム名を変更

|  名前   |   特徴   |
| ルフィ  |   自由   |
|  ゾロ   | 方向音痴  |
|ブルック| |    骨    |
| サンジ |   ぐる眉  |

  SELECT *
    FROM one piece;
  *:全カラムを指定

| name  |  fruit  | feature |
| ルフィ | ヒトヒト |   自由   |
|  ゾロ  |  無し   | 方向音痴  |
|ブルック| ヨミヨミ |    骨    |
| サンジ |  無し   |   ぐる眉  |

Q//悪魔の実の一覧を取得(重複なし)

SELECT fruit
  FROM one piece;だと重複してしまう

|  fruit  |
| ヒトヒト |
|  無し   |
| ヨミヨミ |
|  無し   |

SELECT DISTINCT(fruit)
 FROM one piece;
  DISTINCT:重複削除

|  fruit  |
| ヒトヒト |
|  無し   |
| ヨミヨミ |

Q//可愛いが5より大きいキャラの名前と可愛いを取得

Pokémon
|  name  | kawaii | role |
|  プリン |   4    | 弱い |
| サイドン |   1   |  |
|ピカチュウ|   6    | 弱い |
|  ミュウ |   10   | 万能 |

SELECT name, kawaii
  FROM Pokémon
WHERE kawaii > 5;
  WHERE:条件指定

|  name  | kawaii |
|ピカチュウ|   6    |
|  ミュウ |   10   |
WHEREは条件に合ったレコードを取るイメージ

Q//可愛いが5より大きいroleが弱いレコードを取得

SELECT *
  FROM Pokémon
WHERE kawaii > 5 AND role = '弱い';
  AND:両方満たす

|  name  | kawaii | role |
|ピカチュウ|   6    | 弱い |

Q// 可愛いが5より大きいかroleが弱いのレコードを取得

SELECT *
  FROM Pokémon
WHERE kawaii > 5 OR role = '弱い';
  OR:どちらか満たす

Q///可愛いが4〜6のキャラのレコードを取得

SELECT *
  FROM Pokémon
WHERE kawaii BETWEEN 4 AND 6;
  BETWEEN:~の間

|  name  | kawaii | role |
|  プリン |   4    | 弱い |
|ピカチュウ|   6    | 弱い |

Q//役割が弱いか万能のレコードを取得

SELECT *
  FROM Pokémon
WHERE kawaii IN ('弱い','万能');
  IN:まとめて指定
  NOT IN:まとめて否定

|  name  | kawaii | role |
|  プリン |   4    | 弱い |
|ピカチュウ|   6    | 弱い |
|  ミュウ |   10   | 万能 |

Q//名前が「ミ」から始まるレコードを取得

SELECT *
  FROM Pokémon
WHERE name LIKE 'ミ%';
  LIKE:あいまい検索

|  name  | kawaii | role |
|  ミュウ |   10   | 万能 |

Q//roleが空のレコードを取得

SELECT *
  FROM Pokémon
WHERE role IS NULL;
  NULL:値が不明
  IS NULL:NULL指定
  IS NOT NULL:NULLじゃない

|  name  | kawaii | role |
| サイドン |   1   |  |

Q//Pokémonテーブルのうち、レコードを2行だけ取得

SELECT *
  FROM Pokémon
  LIMIT 2;LIMIT:行数上限指定
  SQLを書く際、データが多すぎると実行が遅くなったりフリーズしたりする

|  name  | kawaii | role |
|  プリン |   4    | 弱い |
| サイドン |   1   |  |

Q//可愛いの昇順で並び替え

SELECT *
  FROM Pokémon
ORDER BY kawaii;
  ORDER BY:並び替え

|  name  | kawaii | role |
| サイドン |   1   |  |
|  プリン |   4    | 弱い |
|ピカチュウ|   6    | 弱い |
|  ミュウ |   10   | 万能 |

SELECT *
  FROM Pokémon
ORDER BY kawaii DESC;
  DESC:降順

|  name  | kawaii | role |
|  ミュウ |   10   | 万能 |
|ピカチュウ|   6    | 弱い |
|  プリン |   4    | 弱い |
| サイドン |   1   |  |

・SQLを書く上での秘訣
  予約語(SELECT,WHERE,etc)は大文字
  特定の予約語(SELECT,WHERE,ORDER BY,etc)の後は改行しよう
  SELECTで列名指定,LIMITすると速くなる

## GROUP BY

- データの集計に必須
- エラーが続出する原因
- 今後GROUP BYで悩むことがなくなる

### 手作業時代

鬼「今週の日毎の会員登録数よこせ」

**members**

| name     | created_day | channel | age |
|----------|-------------|---------|-----|
| 蕪木太郎 | 2025-03-15  | web     | 31  |
| 蕪木二郎 | 2025-03-15  | ad      | 31  |
| 蕪木三郎 | 2025-03-17  | ad      | 31  |
| 蕪木四郎 | 2025-03-17  | ad      | 32  |
| 蕪木五郎 | 2025-03-18  | web     | 33  |

```sql
SELECT COUNT(name)
FROM members
WHERE created_day = '2025-03-15';
          ⇩
       COUNT 2
COUNTのイメージ:レコード数を数えたい時に使う

鬼「次は昨年の日毎の会員登録数よこせ」

SELECT created_day, COUNT(name)
  FROM members
GROUP BY created_day;
  GROUP BY:同じ値でまとめる

| created_day | count |
|  2025-03-15  |2|
|  2025-03-17  |2|
|  2025-03-18  |1|

GROUP BYのイメージ:複数のデータごとに集計したい時に使う

鬼「置いとけ。次は日毎の会員登録数をチャンネルごとに出せ」

SELECT created_day, channel, COUNT(name)
 FROM members
 GROUP BY created_day;

 ！！これはエラーになる！！

| created_day | channel |
|  2025-03-15  |   ?   |//どの値を入れればいいか分からない
|  2025-03-17  |  ad   |
|  2025-03-18  |  web  |

SELECT created_day, channel, COUNT(name)
 FROM members
 GROUP BY created_day,channel;

| created_day | channel |count|
|  2025-03-15  |  web   |1|
|  2025-03-15  |  ad    |1|
|  2025-03-17  |  ad    |2|
|  2025-03-18  |  web   |1|
軸になるカラムを全てORDER BYで指定。
なんの値が入るかをSQLが特定できるようにする